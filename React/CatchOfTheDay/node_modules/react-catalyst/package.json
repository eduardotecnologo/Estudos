{
  "name": "react-catalyst",
  "version": "0.3.0",
  "main": "src/Catalyst.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/tungd/react-catalyst.git"
  },
  "author": {
    "name": "Tung Dao",
    "email": "me@tungdao.com",
    "url": "http://tungdao.com"
  },
  "devDependencies": {
    "browserify": "^3.44.1",
    "karma": "~0.12.9",
    "karma-browserify": "^0.2.0",
    "karma-chrome-launcher": "~0.1.3",
    "karma-firefox-launcher": "~0.1.3",
    "karma-jasmine": "~0.1.5"
  },
  "dependencies": {
    "envify": "^1.2.1",
    "react": "^0.10.0"
  },
  "readme": "\n# React Catalyst\n\nCollection of helpers developed for React.\n\n## LinkedStateMixin\n\nAlternate to `React.addons.LinkedStateMixin`, with support for deep path-based\nstate access.\n\n- StackOverflow question: <http://stackoverflow.com/questions/21057219/react-js-2-way-bindings-two-levels-deep-path-in-valuelink/21058282#21058282>\n- My original Gist: <https://gist.github.com/tungd/8367229>\n- Demo on JSFiddle: <http://jsfiddle.net/uHm6k/3/>\n\nExample:\n\n```js\nvar WithLink = React.createClass({\n  mixins: [Catalyst.LinkedStateMixin],\n  getInitialState: function() {\n    return { values: [{ text: 'Hello!' }] };\n  },\n  render: function() {\n    return <input type=\"text\" valueLink={this.linkState('values.0.text')} />;\n  }\n})\n```\n\n## MessageBusMixin\n\nGlobal MessageBus for components.\n\nQuote from [Communicate Between Components](http://facebook.github.io/react/tips/communicate-between-components.html)\n\n> For communication between two components that don't have a parent-child\n> relationship, you can set up your own global event system. Subscribe to events\n> in componentDidMount(), unsubscribe in componentWillUnmount(), and when you\n> receive an event, call setState().\n\nThis mixin provides three methods:\n\n### publish(channel, data)\n\nPublish an message to a given channel, with the associated data.\n\n### subscribe(channel, callback)\n\nSubscribe to a channel, `callback` gets called when a message arrive in the\nchannel.\n\n### subscribeState(channel, key)\n\nConvenient wrapper to `subscribe/setState` combo.\n\nAll the listener callbacks are automagically unsubscribed when component\nis unmounted.\n\n```js\nvar WithMessageBus = React.createClass({\n  mixins: [Catalyst.MessageBusMixin],\n  componentDidMount: function() {\n    this.subscribe(\"customChannel\", function(data) {\n      ...\n    });\n    this.subscribeState(\"otherChannel\", \"value\")\n  },\n  ...\n})\n```\n\n## AJAXMixin\n\n## TODO\n\n- Build script for individual/all module custom builds\n- Build script for module wrapper (UMD, doing this manually now)\n- Switch to `React.addons.update` on `LinkedStateMixin`.\n",
  "readmeFilename": "README.md",
  "description": "Collection of helpers developed for React.",
  "bugs": {
    "url": "https://github.com/tungd/react-catalyst/issues"
  },
  "_id": "react-catalyst@0.3.0",
  "dist": {
    "shasum": "bcfe5ae96a094d6260f14203894d88b8cbdd50db"
  },
  "_from": "react-catalyst@0.3.0",
  "_resolved": "https://registry.npmjs.org/react-catalyst/-/react-catalyst-0.3.0.tgz"
}
